package 복습;
import java.lang.*;
public class Idontknowwhatidontknow {
	public static void main(String[] args) {
	
	//~무엇을 모르는지도 모르겠습니다~ 초면인 친구는 다 잡아오겠다
		
	//0726
		//자바는 객체지향언어이다. 객체지향언어가...뭐야?
			//객체지향언어Object-oriented Programming는 객체지향프로그래밍에서 사용하는 언어야!
		//객체지향프로그래밍이...뭐야?
			//객체Object는 세상에 실제로 존재하는 모든 사물 혹은 개념을 추상화Abstraction하여 프로그램 상에서 만들어낸 결과물이야!
			//추상화Abstraction은 프로그램이 필요로 하는 실제 데이터들을 모델링하는 기술이야(교재 part2 chap8)
			//예를 들어 창문을 열었더니 미친 스포츠카가 시속 250km/h로 달리고 있으면
			//창문의 개수도 객체로 만들 수 있고 스포츠카에 달린 타이어 수도 객체로 만들 수 있고 자동차가 이동하는 속도도 객체가 될 수 있어!
			//객체는 속성(변수)+기능(메소드)로 구성되어있어!
			//예시: 객체 '자동차'
			//객체 '자동차'의 속성: 차체 높이, 무게, 색깔, 최고속도, 연식
			//객체 '자동차'의 기능: 움직이기, 전조등 켜기, 경적 눌러서 소리내기, 내부 에어컨 틀기
		
		//메소드는 클래스가 가진 기능을 표현하는...클래스가 뭔지도 모르겠어!
		//클래스Class는 객체Object를 정의하는 틀 또는 설계도야!
			//객체의 상태를 나타내는 필드(=클래스에 포함된 변수)와 객체의 행동을 나타내는 메소드로 구성되어 있어!
			//메소드는 어떤 특정 작업을 수행하기 위한 명령문의 집합이야!
		
		//자바에서 메소드를 정의하는 방법
			//접근제어자 반환타입 메소드이름(매개변수목록){//선언부
			//코드마다 반드시 들어가는 public static void main(String[] args){ 도 이거야!
				//public(어떤 클래스에서라도 접근가능) 
				//static(정적임-가비지 콜렉터가 정리하지 않음, 프로그램이 실행되는 순간 메모리에 할당하여 종료까지 유지함)
				//void(반환이 필요없음, 반환값이 없음)
				//string(문자열을 나타내는 자료형) [](배열) args(이름, 바꿀 수 있지만 문자열 유형이어야함)			
				//
	}
}
